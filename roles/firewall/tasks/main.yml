---
- name: Set timezone to UTC
  timezone:
    name: UTC
- name: Update timesyncd configuration
  template:
    src: timesyncd.conf
    dest: /etc/systemd/timesyncd.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart systemd-timesyncd
- name: Enable NTP
  systemd:
    name: systemd-timesyncd.service
    enabled: yes
    state: started
    masked: no
- hostname:
    name: "{{ router_hostname }}"
- name: Setup /etc/hosts
  template:
    src: hosts
    dest: /etc/hosts
    owner: root
    group: root
    mode: '0644'
- name: Setup filesystems
  copy:
    src: fstab
    dest: /etc/fstab
    owner: root
    group: root
    mode: '0644'
  notify:
    - mount auto
    - restart rsyslog
- name: Remote Syslog configuration
  template:
    src: 60-remote.conf
    dest: /etc/rsyslog.d/60-remote.conf
    owner: root
    group: root
    mode: '0644'
  when: rsyslog_udp_server is defined
  notify: restart rsyslog
- name: Install Prometheus Node Exporter
  apt:
    name: prometheus-node-exporter
    state: latest
    install_recommends: false
- name: Configure Prometheus Node Exporter
  copy:
    src: prometheus-node-exporter
    dest: /etc/default/prometheus-node-exporter
    owner: root
    group: root
    mode: '0644'
- name: Firewalld Prometheus Node Exporter Service
  copy:
    src: prometheus-node-exporter.xml
    dest: /etc/firewalld/services/prometheus-node-exporter.xml
    owner: root
    group: root
    mode: '0644'
- name: Enable prometheus-node-exporter.service
  systemd:
    name: prometheus-node-exporter.service
    enabled: yes
    state: started
    masked: no
  when: enable_prometheus_node_exporter|bool
- name: Disable prometheus-node-exporter.service
  systemd:
    name: prometheus-node-exporter.service
    enabled: no
    state: stopped
    masked: no
  when: not enable_prometheus_node_exporter|bool
- name: Apt Cache
  apt:
    update_cache: yes
    cache_valid_time: 86400 # 1 day
- name: Install unattended-upgrades
  apt:
    name: unattended-upgrades
    state: latest
    install_recommends: false
- name: Configure upgrade reboots
  template:
    src: 50unattended-upgrades
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    owner: root
    group: root
    mode: '0644'
- name: Apt Unused Packages
  apt:
    name:
      - snapd
      - multipath-tools
      - popularity-contest
      - byobu
      - packagekit
    state: absent
    purge: yes
    autoclean: yes
    autoremove: yes
- name: Setup ansible-pull config
  copy:
    src: ansible-pull
    dest: /etc/default/ansible-pull
    owner: root
    group: root
    mode: '0640'
- name: Setup ansible-pull service
  copy:
    src: ansible-pull.service
    dest: /etc/systemd/system/ansible-pull.service
    owner: root
    group: root
    mode: '0644'
  notify: systemctl daemon-reload
- name: Setup ansible-pull-reconfigure service
  copy:
    src: ansible-pull-reconfigure.service
    dest: /etc/systemd/system/ansible-pull-reconfigure.service
    owner: root
    group: root
    mode: '0644'
  notify: systemctl daemon-reload
- name: Setup ansible-pull timer
  copy:
    src: ansible-pull.timer
    dest: /etc/systemd/system/ansible-pull.timer
    owner: root
    group: root
    mode: '0644'
  notify: systemctl daemon-reload
- name: Setup ansible-pull-reconfigure path watch
  copy:
    src: ansible-pull-reconfigure.path
    dest: /etc/systemd/system/ansible-pull-reconfigure.path
    owner: root
    group: root
    mode: '0644'
  notify: systemctl daemon-reload
- name: systemctl daemon-reload
  systemd:
    daemon_reload: yes
- name: Enable ansible-pull.service
  systemd:
    name: ansible-pull.service
    enabled: yes
    masked: no
- name: Enable ansible-pull.timer
  systemd:
    name: ansible-pull.timer
    enabled: yes
    state: started
    masked: no
- name: Enable ansible-pull-reconfigure.service
  systemd:
    name: ansible-pull.service
    enabled: yes
    masked: no
- name: Enable ansible-pull-reconfigure.path
  systemd:
    name: ansible-pull-reconfigure.path
    enabled: yes
    state: started
    masked: no
- name: Disable cloud-init network configuration
  copy:
    content: "network: {config: disabled}"
    dest: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
- name: Remove cloud-init netplan configuration
  file:
    path: /etc/netplan/50-cloud-init.yaml
    state: absent
  notify: netplan apply
- name: Let dnsmasq use any VRF with udp
  sysctl:
    name: net.ipv4.udp_l3mdev_accept
    value: '1'
    sysctl_file: /etc/sysctl.d/20-dnsmasq.conf
    reload: yes
    sysctl_set: yes
- name: Let dnsmasq use any VRF with tcp
  sysctl:
    name: net.ipv4.tcp_l3mdev_accept
    value: '1'
    sysctl_file: /etc/sysctl.d/20-dnsmasq.conf
    reload: yes
    sysctl_set: yes
- name: Create vrf0 device
  template:
    src: 00-vrf0.netdev
    dest: /etc/systemd/network/00-vrf0.netdev
    owner: root
    group: root
    mode: '0644'
  notify: restart systemd-networkd
- name: Configure vrf0 network
  template:
    src: 00-vrf0.network
    dest: /etc/systemd/network/00-vrf0.network
    owner: root
    group: root
    mode: '0644'
  notify: restart systemd-networkd
- name: Configure eth0 network
  template:
    src: 10-eth0.network
    dest: /etc/systemd/network/10-eth0.network
    owner: root
    group: root
    mode: '0644'
  notify: restart systemd-networkd
- name: Configure eth1 network
  template:
    src: 10-eth1.network
    dest: /etc/systemd/network/10-eth1.network
    owner: root
    group: root
    mode: '0644'
  notify: restart systemd-networkd
- name: Create lan_vpn VLAN network
  template:
    src: 00-eth1-2.netdev
    dest: /etc/systemd/network/00-eth1-2.netdev
    owner: root
    group: root
    mode: '0644'
  notify: restart systemd-networkd
- name: Configure lan_vpn network
  template:
    src: 20-lan_vpn.network
    dest: /etc/systemd/network/20-lan_vpn.network
    owner: root
    group: root
    mode: '0644'
  notify: restart systemd-networkd
- name: Apt Cache
  apt:
    update_cache: yes
    cache_valid_time: 86400 # 1 day
- name: Setup system DNS
  template:
    src: resolv.conf
    dest: /etc/resolv.conf
    owner: root
    group: root
    mode: '0644'
- name: Install DHCP server
  apt:
    name: dnsmasq
    state: latest
    install_recommends: false
- name: Template a file to /etc/dnsmasq.conf
  template:
    src: dnsmasq.conf
    dest: /etc/dnsmasq.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart dnsmasq
- name: Template DHCP reservations
  template:
    src: ethers
    dest: /etc/ethers
    owner: root
    group: root
    mode: '0644'
  notify: restart dnsmasq
- name: Template DNS hosts file
  template:
    src: hosts.dnsmasq
    dest: /etc/hosts.dnsmasq
    owner: root
    group: root
    mode: '0644'
  notify: restart dnsmasq
- name: Disable systemd-resolved
  ignore_errors: true
  systemd:
    name: systemd-resolved
    enabled: no
    state: stopped
    masked: yes
- name: Enable dnsmasq
  systemd:
    name: dnsmasq
    enabled: yes
    state: started
    masked: no
- name: Apt Cache
  apt:
    update_cache: yes
    cache_valid_time: 86400 # 1 day
- name: Remove ufw
  apt:
    name: ufw
    state: absent
- name: Install firewalld
  apt:
    name: firewalld
    state: latest
    install_recommends: false
- name: Remove packages
  apt:
    autoclean: yes
    autoremove: yes
- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_file: /etc/sysctl.d/20-router.conf
    reload: yes
    sysctl_set: yes
- name: Enable IPv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: '1'
    sysctl_file: /etc/sysctl.d/20-router.conf
    reload: yes
    sysctl_set: yes
- name: Template internal zone config
  template:
    src: internal.xml
    dest: /etc/firewalld/zones/internal.xml
    owner: root
    group: root
    mode: '0644'
  notify: reload firewalld
- name: Template internal VPN zone config
  template:
    src: internal_vpn.xml
    dest: /etc/firewalld/zones/internal_vpn.xml
    owner: root
    group: root
    mode: '0644'
  notify: reload firewalld
- name: Template external zone config
  template:
    src: external.xml
    dest: /etc/firewalld/zones/external.xml
    owner: root
    group: root
    mode: '0644'
  notify: reload firewalld
- name: Template external vpn zone config
  template:
    src: external_vpn.xml
    dest: /etc/firewalld/zones/external_vpn.xml
    owner: root
    group: root
    mode: '0644'
  notify: reload firewalld
- name: Template lockdown whitelist
  template:
    src: lockdown-whitelist.xml
    dest: /etc/firewalld/lockdown-whitelist.xml
    owner: root
    group: root
    mode: '0644'
  notify: reload firewalld
- name: Template firewalld configuration
  template:
    src: firewalld.conf
    dest: /etc/firewalld/firewalld.conf
    owner: root
    group: root
    mode: '0600'
  notify: reload firewalld
- name: Start firewalld
  service:
    name: firewalld
    state: started
- name: Apt Cache
  apt:
    update_cache: yes
    cache_valid_time: 86400 # 1 day
- name: Install Wireguard
  apt:
    name: wireguard
    state: latest
- name: Create wireguard client network
  template:
    src: 30-wireguard-client.netdev
    dest: "/etc/systemd/network/30-{{ vpn_client_interface }}.netdev"
    owner: root
    group: root
    mode: '0644'
  notify: restart systemd-networkd
- name: Configure wireguard client network
  template:
    src: 30-wireguard-client.network
    dest: "/etc/systemd/network/30-{{ vpn_client_interface }}.network"
    owner: root
    group: root
    mode: '0644'
  notify: restart systemd-networkd
